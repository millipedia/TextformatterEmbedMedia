<?php

namespace ProcessWire;

/**
 * ProcessWire Media Embedding Textformatter
 *
 * Looks for audio or video URLs wrapped in <p></p> tags and automatically converts them to the relevant HTML5 elements.
 *
 * 'Inspired' (cough stolen) from Teppo's TextformatterEmbedMedia module.
 * 
 * @author Stephen @ Millipedia 
 * @license Mozilla Public License v2.0 https://mozilla.org/MPL/2.0/
 * 
 */

class TextformatterEmbedMedia extends Textformatter
{

	/**
	 * Get module info
	 *
	 * @return array
	 */
	public static function getModuleInfo()
	{
		return [
			'title' => 'Media Embed Text Formatter',
			'version' => '001',
			'summary' => 'Converts media file URLs within paragraph tags into HTML5 audio elements.',
			'author' => 'Stephen @ millipedia',
		];
	}

	/**
	 * Media formats
	 *
	 * @var array
	 */
	protected $media_formats = [
		'mp3' => 'audio/mpeg',
		'ogg' => 'audio/ogg',
		'wav' => 'audio/wav',
		'mp4' => 'video/mp4'
	];

	/**
	 * Text formatting function as used by the Textformatter interface
	 *
	 * Here we look for audio file URLs on first pass using a fast strpos() function.
	 * If found, we do our second pass with preg_match_all and replace the audio URLs
	 * with HTML5 <audio> tags.
	 *
	 * @param string $str
	 */
	public function format(&$str)
	{

		// bail out early if there are no media files
		if (stripos($str, '.mp3') === false && stripos($str, '.ogg') === false && stripos($str, '.wav') === false && stripos($str, '.mp4')  === false) {
			return;
		}

		// capture media file URLs with regex and replace found matches with relevant element
		$regex = '#\<p>\s*((https:\/\/.*?|\/site\/assets\/files\/.*?)\.(mp3|ogg|wav|mp4))\s*\<\/p\>#';

		if (preg_match_all($regex, $str, $matches)) {

			foreach ($matches[0] as $key => $line) {

				$url = $this->wire('sanitizer')->url($matches[1][$key], [
					'allowIDN' => true,
					'allowSchemes' => ['http', 'https'],
					'requireScheme' => false,
				]);


				if ($url) {

					// This gives us the extension of the media file.
					$media_type = strtolower($matches[3][$key]);

					// If it's a valid media type, then lets swap it for the relevant tag.
					// Not really sure we'd get here if it's not a valid media type but just in case.
					if(array_key_exists($media_type, $this->media_formats)){

						if($media_type=='mp4'){
							$tag=' <video controls><source src="' . $url . '" type="video/mp4"></video>';
						}else{//  ...we use an audio tag.
							$tag = '<audio controls class="TextformatterAudioEmbed">'
							. '<source src="' . $url . '" type="' . $this->media_formats[$media_type] . '">'
							. '</audio>';
						}

						$str = str_replace($line, $tag, $str);

					}
				}
			}
		} else {
			// bd("no matches");
		}
	}
}
